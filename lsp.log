
[START][2023-09-09 18:20:04] LSP logging initiated
[INFO][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:634	"Starting RPC client"	{  args = { "--stdio" },  cmd = "/home/icholy/.nvm/versions/node/v16.20.1/bin/vscode-eslint-language-server",  extra = {    cwd = "/home/icholy/src/github.com/icholy/quickfixbug"  }}
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:261	"rpc.send"	{  id = 1,  jsonrpc = "2.0",  method = "initialize",  params = {    capabilities = {      general = {        positionEncodings = { "utf-16" }      },      textDocument = {        callHierarchy = {          dynamicRegistration = false        },        codeAction = {          codeActionLiteralSupport = {            codeActionKind = {              valueSet = { "", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }            }          },          dataSupport = true,          dynamicRegistration = true,          isPreferredSupport = true,          resolveSupport = {            properties = { "edit" }          }        },        completion = {          completionItem = {            commitCharactersSupport = false,            deprecatedSupport = false,            documentationFormat = { "markdown", "plaintext" },            preselectSupport = false,            snippetSupport = false          },          completionItemKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }          },          contextSupport = false,          dynamicRegistration = false        },        declaration = {          linkSupport = true        },        definition = {          dynamicRegistration = true,          linkSupport = true        },        diagnostic = {          dynamicRegistration = false        },        documentHighlight = {          dynamicRegistration = false        },        documentSymbol = {          dynamicRegistration = false,          hierarchicalDocumentSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        formatting = {          dynamicRegistration = true        },        hover = {          contentFormat = { "markdown", "plaintext" },          dynamicRegistration = true        },        implementation = {          linkSupport = true        },        inlayHint = {          dynamicRegistration = true,          resolveSupport = {            properties = {}          }        },        publishDiagnostics = {          dataSupport = true,          relatedInformation = true,          tagSupport = {            valueSet = { 1, 2 }          }        },        rangeFormatting = {          dynamicRegistration = true        },        references = {          dynamicRegistration = false        },        rename = {          dynamicRegistration = true,          prepareSupport = true        },        semanticTokens = {          augmentsSyntaxTokens = true,          dynamicRegistration = false,          formats = { "relative" },          multilineTokenSupport = false,          overlappingTokenSupport = true,          requests = {            full = {              delta = true            },            range = false          },          serverCancelSupport = false,          tokenModifiers = { "declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary" },          tokenTypes = { "namespace", "type", "class", "enum", "interface", "struct", "typeParameter", "parameter", "variable", "property", "enumMember", "event", "function", "method", "macro", "keyword", "modifier", "comment", "string", "number", "regexp", "operator", "decorator" }        },        signatureHelp = {          dynamicRegistration = false,          signatureInformation = {            activeParameterSupport = true,            documentationFormat = { "markdown", "plaintext" },            parameterInformation = {              labelOffsetSupport = true            }          }        },        synchronization = {          didSave = true,          dynamicRegistration = false,          willSave = true,          willSaveWaitUntil = true        },        typeDefinition = {          linkSupport = true        }      },      window = {        showDocument = {          support = true        },        showMessage = {          messageActionItem = {            additionalPropertiesSupport = false          }        },        workDoneProgress = true      },      workspace = {        applyEdit = true,        configuration = true,        didChangeWatchedFiles = {          dynamicRegistration = true,          relativePatternSupport = true        },        inlayHint = {          refreshSupport = true        },        semanticTokens = {          refreshSupport = true        },        symbol = {          dynamicRegistration = false,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        workspaceEdit = {          resourceOperations = { "rename", "create", "delete" }        },        workspaceFolders = true      }    },    clientInfo = {      name = "Neovim",      version = "0.10.0-dev"    },    initializationOptions = vim.empty_dict(),    processId = 170847,    rootPath = "/home/icholy/src/github.com/icholy/quickfixbug",    rootUri = "file:///home/icholy/src/github.com/icholy/quickfixbug",    trace = "off",    workspaceFolders = { {        name = "/home/icholy/src/github.com/icholy/quickfixbug",        uri = "file:///home/icholy/src/github.com/icholy/quickfixbug"      } }  }}
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:364	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "ESLint server running in node v16.20.1",    type = 3  }}
[INFO][2023-09-09 18:20:04] ...lsp/handlers.lua:547	"ESLint server running in node v16.20.1"
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:364	"rpc.receive"	{  id = 1,  jsonrpc = "2.0",  result = {    capabilities = {      codeActionProvider = {        codeActionKinds = { "quickfix", "source.fixAll.eslint" }      },      executeCommandProvider = {        commands = { "eslint.applySingleFix", "eslint.applySuggestion", "eslint.applySameFixes", "eslint.applyAllFixes", "eslint.applyDisableLine", "eslint.applyDisableFile", "eslint.openRuleDoc" }      },      textDocumentSync = {        change = 2,        openClose = true,        save = {          includeText = false        },        willSaveWaitUntil = false      },      workspace = {        workspaceFolders = {          supported = true        }      }    }  }}
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:261	"rpc.send"	{  jsonrpc = "2.0",  method = "initialized",  params = vim.empty_dict()}
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:261	"rpc.send"	{  jsonrpc = "2.0",  method = "workspace/didChangeConfiguration",  params = {    settings = {      codeAction = {        disableRuleComment = {          enable = true,          location = "separateLine"        },        showDocumentation = {          enable = true        }      },      codeActionOnSave = {        enable = false,        mode = "all"      },      experimental = {        useFlatConfig = false      },      format = true,      nodePath = "",      onIgnoredFiles = "off",      packageManager = "npm",      problems = {        shortenToSingleLine = false      },      quiet = false,      rulesCustomizations = {},      run = "onType",      useESLintClass = false,      validate = "on",      workingDirectory = {        mode = "location"      },      workspaceFolder = {        name = "quickfixbug",        uri = "/home/icholy/src/github.com/icholy/quickfixbug"      }    }  }}
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:261	"rpc.send"	{  jsonrpc = "2.0",  method = "workspace/didChangeConfiguration",  params = {    settings = {      codeAction = {        disableRuleComment = {          enable = true,          location = "separateLine"        },        showDocumentation = {          enable = true        }      },      codeActionOnSave = {        enable = false,        mode = "all"      },      experimental = {        useFlatConfig = false      },      format = true,      nodePath = "",      onIgnoredFiles = "off",      packageManager = "npm",      problems = {        shortenToSingleLine = false      },      quiet = false,      rulesCustomizations = {},      run = "onType",      useESLintClass = false,      validate = "on",      workingDirectory = {        mode = "location"      },      workspaceFolder = {        name = "quickfixbug",        uri = "/home/icholy/src/github.com/icholy/quickfixbug"      }    }  }}
[INFO][2023-09-09 18:20:04] .../lua/vim/lsp.lua:1446	"LSP[eslint]"	"server_capabilities"	{  server_capabilities = {    codeActionProvider = {      codeActionKinds = { "quickfix", "source.fixAll.eslint" }    },    executeCommandProvider = {      commands = { "eslint.applySingleFix", "eslint.applySuggestion", "eslint.applySameFixes", "eslint.applyAllFixes", "eslint.applyDisableLine", "eslint.applyDisableFile", "eslint.openRuleDoc" }    },    textDocumentSync = {      change = 2,      openClose = true,      save = {        includeText = false      },      willSaveWaitUntil = false    },    workspace = {      workspaceFolders = {        supported = true      }    }  }}
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:261	"rpc.send"	{  jsonrpc = "2.0",  method = "textDocument/didOpen",  params = {    textDocument = {      languageId = "javascript",      text = "function main() {\nconsole.log('test');\n}\n",      uri = "file:///home/icholy/src/github.com/icholy/quickfixbug/main.js",      version = 0    }  }}
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:364	"rpc.receive"	{  id = 0,  jsonrpc = "2.0",  method = "client/registerCapability",  params = {    registrations = { {        id = "63d07c86-c746-4fb0-b7ed-b0f046f87d91",        method = "workspace/didChangeWorkspaceFolders",        registerOptions = vim.empty_dict()      } }  }}
[WARN][2023-09-09 18:20:04] ...lsp/handlers.lua:134	"The language server eslint triggers a registerCapability handler for workspace/didChangeWorkspaceFolders despite dynamicRegistration set to false. Report upstream, this warning is harmless"
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:380	"server_request: callback result"	{  result = vim.NIL,  status = true}
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:261	"rpc.send"	{  id = 0,  jsonrpc = "2.0",  result = vim.NIL}
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:364	"rpc.receive"	{  id = 1,  jsonrpc = "2.0",  method = "workspace/configuration",  params = {    items = { {        scopeUri = "file:///home/icholy/src/github.com/icholy/quickfixbug/main.js",        section = ""      } }  }}
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:380	"server_request: callback result"	{  result = { {      codeAction = {        disableRuleComment = {          enable = true,          location = "separateLine"        },        showDocumentation = {          enable = true        }      },      codeActionOnSave = {        enable = false,        mode = "all"      },      experimental = {        useFlatConfig = false      },      format = true,      nodePath = "",      onIgnoredFiles = "off",      packageManager = "npm",      problems = {        shortenToSingleLine = false      },      quiet = false,      rulesCustomizations = {},      run = "onType",      useESLintClass = false,      validate = "on",      workingDirectory = {        mode = "location"      },      workspaceFolder = {        name = "quickfixbug",        uri = "/home/icholy/src/github.com/icholy/quickfixbug"      }    } },  status = true}
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:261	"rpc.send"	{  id = 1,  jsonrpc = "2.0",  result = { {      codeAction = {        disableRuleComment = {          enable = true,          location = "separateLine"        },        showDocumentation = {          enable = true        }      },      codeActionOnSave = {        enable = false,        mode = "all"      },      experimental = {        useFlatConfig = false      },      format = true,      nodePath = "",      onIgnoredFiles = "off",      packageManager = "npm",      problems = {        shortenToSingleLine = false      },      quiet = false,      rulesCustomizations = {},      run = "onType",      useESLintClass = false,      validate = "on",      workingDirectory = {        mode = "location"      },      workspaceFolder = {        name = "quickfixbug",        uri = "/home/icholy/src/github.com/icholy/quickfixbug"      }    } }}
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:364	"rpc.receive"	{  jsonrpc = "2.0",  method = "window/logMessage",  params = {    message = "ESLint library loaded from: /home/icholy/src/github.com/icholy/quickfixbug/node_modules/eslint/lib/api.js",    type = 3  }}
[INFO][2023-09-09 18:20:04] ...lsp/handlers.lua:547	"ESLint library loaded from: /home/icholy/src/github.com/icholy/quickfixbug/node_modules/eslint/lib/api.js"
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:364	"rpc.receive"	{  id = 2,  jsonrpc = "2.0",  method = "client/registerCapability",  params = {    registrations = { {        id = "5bd66db2-86d8-436f-870f-954e0001c39b",        method = "textDocument/formatting",        registerOptions = {          documentSelector = { {              pattern = "/home/icholy/src/github.com/icholy/quickfixbug/main.js",              scheme = "file"            } }        }      } }  }}
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:380	"server_request: callback result"	{  result = vim.NIL,  status = true}
[DEBUG][2023-09-09 18:20:04] .../vim/lsp/rpc.lua:261	"rpc.send"	{  id = 2,  jsonrpc = "2.0",  result = vim.NIL}
[DEBUG][2023-09-09 18:20:05] .../vim/lsp/rpc.lua:364	"rpc.receive"	{  jsonrpc = "2.0",  method = "textDocument/publishDiagnostics",  params = {    diagnostics = { {        code = "prettier/prettier",        codeDescription = {          href = "https://github.com/prettier/eslint-plugin-prettier#options"        },        message = "Insert `↹`",        range = {          ["end"] = {            character = 0,            line = 1          },          start = {            character = 0,            line = 1          }        },        severity = 1,        source = "eslint"      } },    uri = "file:///home/icholy/src/github.com/icholy/quickfixbug/main.js"  }}
[DEBUG][2023-09-09 18:20:05] .../vim/lsp/rpc.lua:364	"rpc.receive"	{  jsonrpc = "2.0",  method = "eslint/status",  params = {    state = 1,    uri = "file:///home/icholy/src/github.com/icholy/quickfixbug/main.js",    validationTime = 171  }}
[DEBUG][2023-09-09 18:20:07] .../vim/lsp/rpc.lua:261	"rpc.send"	{  jsonrpc = "2.0",  method = "textDocument/didChange",  params = {    contentChanges = { {        range = {          ["end"] = {            character = 0,            line = 1          },          start = {            character = 0,            line = 1          }        },        rangeLength = 0,        text = " "      }, {        range = {          ["end"] = {            character = 1,            line = 1          },          start = {            character = 1,            line = 1          }        },        rangeLength = 0,        text = " "      }, {        range = {          ["end"] = {            character = 2,            line = 1          },          start = {            character = 2,            line = 1          }        },        rangeLength = 0,        text = " "      }, {        range = {          ["end"] = {            character = 3,            line = 1          },          start = {            character = 3,            line = 1          }        },        rangeLength = 0,        text = " "      }, {        range = {          ["end"] = {            character = 4,            line = 1          },          start = {            character = 4,            line = 1          }        },        rangeLength = 0,        text = " "      }, {        range = {          ["end"] = {            character = 5,            line = 1          },          start = {            character = 5,            line = 1          }        },        rangeLength = 0,        text = " "      }, {        range = {          ["end"] = {            character = 6,            line = 1          },          start = {            character = 6,            line = 1          }        },        rangeLength = 0,        text = " "      }, {        range = {          ["end"] = {            character = 7,            line = 1          },          start = {            character = 7,            line = 1          }        },        rangeLength = 0,        text = " "      } },    textDocument = {      uri = "file:///home/icholy/src/github.com/icholy/quickfixbug/main.js",      version = 11    }  }}
[DEBUG][2023-09-09 18:20:07] .../vim/lsp/rpc.lua:364	"rpc.receive"	{  jsonrpc = "2.0",  method = "textDocument/publishDiagnostics",  params = {    diagnostics = { {        code = "prettier/prettier",        codeDescription = {          href = "https://github.com/prettier/eslint-plugin-prettier#options"        },        message = "Replace `········` with `↹`",        range = {          ["end"] = {            character = 8,            line = 1          },          start = {            character = 0,            line = 1          }        },        severity = 1,        source = "eslint"      } },    uri = "file:///home/icholy/src/github.com/icholy/quickfixbug/main.js"  }}
[DEBUG][2023-09-09 18:20:07] .../vim/lsp/rpc.lua:364	"rpc.receive"	{  jsonrpc = "2.0",  method = "eslint/status",  params = {    state = 1,    uri = "file:///home/icholy/src/github.com/icholy/quickfixbug/main.js",    validationTime = 5  }}
[INFO][2023-09-09 18:20:20] .../lua/vim/lsp.lua:2064	"exit_handler"	{ {    _exec_cmd = <function 1>,    _on_attach = <function 2>,    attached_buffers = { true },    cancel_request = <function 3>,    commands = {},    config = {      autostart = true,      capabilities = {        general = {          positionEncodings = { "utf-16" }        },        textDocument = {          callHierarchy = {            dynamicRegistration = false          },          codeAction = {            codeActionLiteralSupport = {              codeActionKind = {                valueSet = { "", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }              }            },            dataSupport = true,            dynamicRegistration = true,            isPreferredSupport = true,            resolveSupport = {              properties = { "edit" }            }          },          completion = {            completionItem = {              commitCharactersSupport = false,              deprecatedSupport = false,              documentationFormat = { "markdown", "plaintext" },              preselectSupport = false,              snippetSupport = false            },            completionItemKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }            },            contextSupport = false,            dynamicRegistration = false          },          declaration = {            linkSupport = true          },          definition = {            dynamicRegistration = true,            linkSupport = true          },          diagnostic = {            dynamicRegistration = false          },          documentHighlight = {            dynamicRegistration = false          },          documentSymbol = {            dynamicRegistration = false,            hierarchicalDocumentSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }            }          },          formatting = {            dynamicRegistration = true          },          hover = {            contentFormat = { "markdown", "plaintext" },            dynamicRegistration = true          },          implementation = {            linkSupport = true          },          inlayHint = {            dynamicRegistration = true,            resolveSupport = {              properties = {}            }          },          publishDiagnostics = {            dataSupport = true,            relatedInformation = true,            tagSupport = {              valueSet = { 1, 2 }            }          },          rangeFormatting = {            dynamicRegistration = true          },          references = {            dynamicRegistration = false          },          rename = {            dynamicRegistration = true,            prepareSupport = true          },          semanticTokens = {            augmentsSyntaxTokens = true,            dynamicRegistration = false,            formats = { "relative" },            multilineTokenSupport = false,            overlappingTokenSupport = true,            requests = {              full = {                delta = true              },              range = false            },            serverCancelSupport = false,            tokenModifiers = { "declaration", "definition", "readonly", "static", "deprecated", "abstract", "async", "modification", "documentation", "defaultLibrary" },            tokenTypes = { "namespace", "type", "class", "enum", "interface", "struct", "typeParameter", "parameter", "variable", "property", "enumMember", "event", "function", "method", "macro", "keyword", "modifier", "comment", "string", "number", "regexp", "operator", "decorator" }          },          signatureHelp = {            dynamicRegistration = false,            signatureInformation = {              activeParameterSupport = true,              documentationFormat = { "markdown", "plaintext" },              parameterInformation = {                labelOffsetSupport = true              }            }          },          synchronization = {            didSave = true,            dynamicRegistration = false,            willSave = true,            willSaveWaitUntil = true          },          typeDefinition = {            linkSupport = true          }        },        window = {          showDocument = {            support = true          },          showMessage = {            messageActionItem = {              additionalPropertiesSupport = false            }          },          workDoneProgress = true        },        workspace = {          applyEdit = true,          configuration = true,          didChangeWatchedFiles = {            dynamicRegistration = true,            relativePatternSupport = true          },          inlayHint = {            refreshSupport = true          },          semanticTokens = {            refreshSupport = true          },          symbol = {            dynamicRegistration = false,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }            }          },          workspaceEdit = {            resourceOperations = { "rename", "create", "delete" }          },          workspaceFolders = true        }      },      cmd = { "/home/icholy/.nvm/versions/node/v16.20.1/bin/vscode-eslint-language-server", "--stdio" },      cmd_cwd = "/home/icholy/src/github.com/icholy/quickfixbug",      filetypes = { "javascript", "javascriptreact", "javascript.jsx", "typescript", "typescriptreact", "typescript.tsx", "vue", "svelte", "astro" },      flags = {},      get_language_id = <function 4>,      handlers = <1>{        ["eslint/confirmESLintExecution"] = <function 5>,        ["eslint/noLibrary"] = <function 6>,        ["eslint/openDoc"] = <function 7>,        ["eslint/probeFailed"] = <function 8>      },      init_options = vim.empty_dict(),      log_level = 2,      message_level = 2,      name = "eslint",      on_attach = <function 9>,      on_exit = <function 10>,      on_init = <function 11>,      on_new_config = <function 12>,      root_dir = "/home/icholy/src/github.com/icholy/quickfixbug",      settings = {        codeAction = {          disableRuleComment = {            enable = true,            location = "separateLine"          },          showDocumentation = {            enable = true          }        },        codeActionOnSave = {          enable = false,          mode = "all"        },        experimental = {          useFlatConfig = false        },        format = true,        nodePath = "",        onIgnoredFiles = "off",        packageManager = "npm",        problems = {          shortenToSingleLine = false        },        quiet = false,        rulesCustomizations = {},        run = "onType",        useESLintClass = false,        validate = "on",        workingDirectory = {          mode = "location"        },        workspaceFolder = {          name = "quickfixbug",          uri = "/home/icholy/src/github.com/icholy/quickfixbug"        }      },      workspace_folders = <2>{ {          name = "/home/icholy/src/github.com/icholy/quickfixbug",          uri = "file:///home/icholy/src/github.com/icholy/quickfixbug"        } },      <metatable> = <3>{        __tostring = <function 13>      }    },    dynamic_capabilities = {      capabilities = {        ["textDocument/formatting"] = { {            id = "5bd66db2-86d8-436f-870f-954e0001c39b",            method = "textDocument/formatting",            registerOptions = {              documentSelector = { {                  pattern = "/home/icholy/src/github.com/icholy/quickfixbug/main.js",                  scheme = "file"                } }            }          } },        ["workspace/didChangeWorkspaceFolders"] = { {            id = "63d07c86-c746-4fb0-b7ed-b0f046f87d91",            method = "workspace/didChangeWorkspaceFolders",            registerOptions = vim.empty_dict()          } }      },      client_id = 1,      <metatable> = {        __index = {          get = <function 14>,          match = <function 15>,          new = <function 16>,          register = <function 17>,          supports = <function 18>,          supports_registration = <function 19>,          unregister = <function 20>        }      }    },    handlers = <table 1>,    id = 1,    initialized = true,    is_stopped = <function 21>,    messages = {      messages = {},      name = "eslint",      progress = {},      status = {}    },    name = "eslint",    notify = <function 22>,    offset_encoding = "utf-16",    progress = {      _idx_read = 0,      _idx_write = 0,      _items = {},      _size = 51,      pending = {},      <metatable> = {        __call = <function 23>,        __index = {          clear = <function 24>,          peek = <function 25>,          pop = <function 26>,          push = <function 27>        }      }    },    request = <function 28>,    request_sync = <function 29>,    requests = {},    rpc = {      is_closing = <function 30>,      notify = <function 31>,      request = <function 32>,      terminate = <function 33>    },    server_capabilities = {      codeActionProvider = {        codeActionKinds = { "quickfix", "source.fixAll.eslint" }      },      executeCommandProvider = {        commands = { "eslint.applySingleFix", "eslint.applySuggestion", "eslint.applySameFixes", "eslint.applyAllFixes", "eslint.applyDisableLine", "eslint.applyDisableFile", "eslint.openRuleDoc" }      },      textDocumentSync = {        change = 2,        openClose = true,        save = {          includeText = false        },        willSaveWaitUntil = false      },      workspace = {        workspaceFolders = {          supported = true        }      }    },    stop = <function 34>,    supports_method = <function 35>,    workspace_did_change_configuration = <function 36>,    workspace_folders = <table 2>  } }
[DEBUG][2023-09-09 18:20:20] .../vim/lsp/rpc.lua:261	"rpc.send"	{  id = 2,  jsonrpc = "2.0",  method = "shutdown"}
[DEBUG][2023-09-09 18:20:20] .../vim/lsp/rpc.lua:364	"rpc.receive"	{  id = 2,  jsonrpc = "2.0"}
[DEBUG][2023-09-09 18:20:20] .../vim/lsp/rpc.lua:261	"rpc.send"	{  jsonrpc = "2.0",  method = "exit"}
